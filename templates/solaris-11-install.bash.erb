#!/bin/bash -e

download_file() {
  source_file="https://<%= @master %>:8140/packages/current/<%= @platform_tag %>/${1?}"
  if hash curl >&/dev/null; then
    curl --tlsv1 -sk "${source_file?}" -o "<%= staging_dir %>/${1?}"
  elif hash wget >&/dev/null; then
    wget --secure-protocol=TLSv1 --no-check-certificate --quiet "${source_file?}" -O "<%= staging_dir %>/${1?}"
  else
    echo "Couldn't find curl or wget; unable to continue" >&2
    exit 1
  fi
}

download_packages() {
  download_file "packages.txt"

  for pkg in $(cat "<%= staging_dir %>/packages.txt"); do
    download_file "${pkg?}"
  done
}

create_repo() {
  ips_repo_dir="/etc/puppetlabs/installer/solaris.repo"
  ips_repo="file://${ips_repo_dir?}"

  if [ -f "${ips_repo_dir?}/pkg5.repository" ] ; then
    # The repo exists, so we remove its packages
    pkgrepo remove -s "${ips_repo}" '*' || :
  else
    mkdir -p "${ips_repo_dir?}"
    pkgrepo create ${ips_repo?}
  fi

  pkgrepo set -s ${ips_repo?} publisher/prefix=puppetlabs.com

  for pkg in $(cat "<%= staging_dir %>/packages.txt"); do
    pkgrecv -s "<%= staging_dir %>/${pkg?}" -d ${ips_repo?} '*' > /dev/null
  done

  # If the puppetlabs.com publisher exists, it may have been put in place
  # by a global zone install after an install in this non-global zone.  As
  # such we replace its uri(s) with (or at the very least add) ours.
  if pkg publisher puppetlabs.com >&/dev/null; then
    pkg set-publisher -G '*' -g "${ips_repo?}" puppetlabs.com
  else
    pkg set-publisher -p "${ips_repo?}" puppetlabs.com
  fi
}

install_agent() {

  download_packages

  create_repo

  # Package names are of the form pe-puppet-all@3.4.3.0,5.11-1.p5p
  # We only care about the bit before -all@...
  pkg install $(sed 's/^\(pe-[a-z0-9-]*\)-[a-z0-9]*@.*$/\1/' "<%= staging_dir %>/packages.txt") > /dev/null

  /opt/puppet/bin/puppet resource service pe-puppet ensure=running enable=true
  /opt/puppet/bin/puppet resource service pe-mcollective ensure=running enable=true

}

install_agent "$@"
